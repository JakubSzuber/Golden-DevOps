---

# TODO Temporary workflow for testing purposes (delete later)

name: Features

on:
  workflow_dispatch:
    inputs:
      somechoice:
        description: 'Some choice'
        required: true
        default: 'one'
        type: choice
        options:
          - one
          - two
          - three
      print_tags:
        description: 'True to print to STDOUT'
        required: true
        type: boolean
      tags:
        description: 'Test scenario tags'
        required: true
        type: string
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

jobs:
  print-tag:
    runs-on: ubuntu-latest
    if:  ${{ inputs.print_tags }} 
    steps:
      - name: Print the input tag to STDOUT
        run: echo  The tags are ${{ inputs.tags }} and some choice is ${{ inputs.somechoice }}
  scan-image-Trivy:
    name: Scan Image with Trivy
    runs-on: ubuntu-latest

    permissions:
      contents: read  # Obtain permission needed for actions/checkout to fetch code
      packages: read  # Obtain permission needed to push docker image to ghcr.io
      security-events: write  # Obtain permission needed for github/codeql-action/upload-sarif to upload SARIF results

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Login to ghcr.io registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image to scan
        run: docker pull jakubszuber/react-nginx-image:latest

      # Gain an additional overview of the vulnerabilities
      # - name: Run Trivy for all CVEs (non-blocking)
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: ghcr.io/jakubszuber/react-nginx-image:${{ github.run_id }}
      #     exit-code: 0
      #     format: table

      # - name: Run Trivy for all CVEs (blocking)
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: jakubszuber/react-nginx-image:latest
      #     exit-code: 1
      #     severity: 'CRITICAL'
      #     format: table 

      - name: Run Trivy for HIGH CVEs and report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'jakubszuber/react-nginx-image:latest'
          exit-code: 0
          #ignore-unfixed: true  #TODO uncomment when all scans-related code will be finished (before uncommenting clear entire github scanning)
          severity: 'HIGH,CRITICAL'

      - name: Run Trivy for HIGH CVEs and report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'jakubszuber/react-nginx-image:latest'
          exit-code: 0
          #ignore-unfixed: true  #TODO uncomment when all scans-related code will be finished (before uncommenting clear entire github scanning)
          severity: 'HIGH,CRITICAL'
          format: 'sarif'
          output: 'trivy-results.sarif'

#      - name: Run Trivy for HIGH,CRITICAL CVEs and report (blocking)
#        uses: aquasecurity/trivy-action@master
#        with:
#          image-ref: ${{ github.run_id }}
#          exit-code: 1
#          ignore-unfixed: true
#          vuln-type: 'os,library'
#          severity: 'HIGH,CRITICAL'
#          format: 'sarif'
#          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  scan-image-Snyk:
    name: Scan Image with Snyk
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Login to ghcr.io registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image to scan
        run: docker pull jakubszuber/react-nginx-image:latest

      # Gain an additional overview of the vulnerabilities
      - name: Run Snyk to check Docker image for vulnerabilities (non-blocking)
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: jakubszuber/react-nginx-image:latest
          args: --file=Dockerfile

      - name: Run Snyk to check Docker image for vulnerabilities (blocking)
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: jakubszuber/react-nginx-image:latest
          args: --file=Dockerfile --severity-threshold=critical

      - name: Run Snyk for HIGH CVEs and report
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: jakubszuber/react-nginx-image:latest
          args: --file=Dockerfile --severity-threshold=high --sarif-file-output=snyk-image.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'snyk-image.sarif'
